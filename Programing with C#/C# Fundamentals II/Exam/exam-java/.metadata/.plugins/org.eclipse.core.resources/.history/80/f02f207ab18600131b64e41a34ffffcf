import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map.Entry;
import java.util.Scanner;
import java.util.SortedMap;
import java.util.TreeMap;

public class RelevanceIndex {

	public static void main(String[] args) {
		String dir = System.getProperty("user.dir");
		String fileName = dir + "\\input.txt";
		// System.out.println(fileName);
		File f = new File(fileName);
		if (f.exists()) {
			try {
				System.setIn(new BufferedInputStream(new FileInputStream(
						fileName)));
				System.setIn(new FileInputStream(fileName));
			} catch (FileNotFoundException e) {
				System.out.println(e.getMessage());
			}
		}
		Scanner sc = new Scanner(System.in);


		SortedMap<Integer, String> data = new TreeMap<Integer, String>();
		
		List<String> lines = new ArrayList<>();
		String[] separator = new String[] { ",", ".", "(", ")", ";", "-", "!", "?", " " };

		String searchWord = sc.nextLine();
		int numLines = sc.nextInt();// will be no more than 100

		for (int i = 0; i < numLines; i++)
		{
			StringBuilder line = new StringBuilder();
			String[] words = sc.nextLine().toString().split(",");//TODO separator !!!
			int counterWord = 0;
			for (String word : words)
			{
				line.append(word);
				line.append(" ");
				if (word == searchWord)
				{
					counterWord++;
				}
			}
			line.toString().toLowerCase();
			//line.(searchWord, searchWord.toUpperCase());//TODO
			data.put(counterWord, line.toString());
		}
		StringBuilder sb = new StringBuilder();
		List<String> result = new ArrayList<>();
		for (Entry<Integer, String> item : data.entrySet()) {
			{
				result.add(item.getValue());
			}
			for (int i = 0; i < result.size(); i++)
			{
				System.out.println(result.get(result.size() - i - 1));
			}
		}
	}
}
